<Project Sdk="Microsoft.NET.Sdk.Razor">

  <!-- Blazor Library Template parameters-->
  <!--https://github.com/aspnet/AspNetCore/blob/master/src/Components/Blazor/Templates/src/content/BlazorLibrary-CSharp/BlazorLibrary-CSharp.csproj -->
  <PropertyGroup>
    <IsPackable>true</IsPackable>
    <RestoreAdditionalProjectSources Condition="'$(IncludeCustomRestoreSourcesSymbol)'=='true'">
      https://dotnet.myget.org/F/aspnetcore-dev/api/v3/index.json;
      https://dotnet.myget.org/F/blazor-dev/api/v3/index.json;
    </RestoreAdditionalProjectSources>
    <RestoreAdditionalProjectSources>
      https://www.myget.org/F/timewarp-enterprises/api/v3/index.json;
    </RestoreAdditionalProjectSources>
    <RazorLangVersion>3.0</RazorLangVersion>
    <AddRazorSupportForMvc>true</AddRazorSupportForMvc>
  </PropertyGroup>
  <!-- End Blazor Library Template parameters-->

  <PropertyGroup>
    <Title>Blazor State</Title>
    <Company>TimeWarp Enterprises Limited</Company>
    <Description>blazor-state a MediatR pipeline for Blazor state management</Description>
    <OutputType>Library</OutputType>
    <PackageId>Blazor-State</PackageId>
    <PackageIcon>..\..\assets\Logo.png</PackageIcon>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
  </PropertyGroup>
  
  <!-- Source Link see https://github.com/dotnet/sourcelink/blob/master/README.md -->
  <PropertyGroup>
    <!-- Optional: Publish the repository URL in the built .nupkg (in the NuSpec <Repository> element) -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>

    <!-- Optional: Embed source files that are not tracked by the source control manager in the PDB -->
    <EmbedUntrackedSources>true</EmbedUntrackedSources>

    <!-- Optional: Build symbol package (.snupkg) to distribute the PDB containing Source Link -->
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="$(MicrosoftSourceLinkGitHubVersion)" PrivateAssets="All" />
  </ItemGroup>
  <!-- End Source Link -->

  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);IncludeJsDll;WriteVersionToFile</TargetsForTfmSpecificBuildOutput>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageOutputPath>./bin/Packages</PackageOutputPath>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AnyClone" Version="$(AnyCloneVersion)" />
    <PackageReference Include="MediatR" Version="$(MediatrVersion)" />
    <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="$(MediatrExtensionsMicrosoftDependencyInjectionVersion)" />
    <PackageReference Include="Microsoft.AspNetCore.Components.Browser" Version="$(MicrosoftAspNetCoreComponentsBrowserVersion)" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="$(MicrosoftExtensionsLoggingAbstractionsVersion)" />
    <PackageReference Include="TypeSupport" Version="$(TypeSupportVersion)" />
  </ItemGroup>

  <!-- TypeScript project-->
  <ItemGroup>
    <ProjectReference Include="..\BlazorState.Js\BlazorState.Js.csproj" PrivateAssets="All" />
    <None Include="..\..\UNLICENSE.txt" Pack="true" PackagePath="" />
    <None Include="..\..\assets\Logo.png" Pack="true" PackagePath="" />
  </ItemGroup>

  <Target Name="IncludeJsDll">
    <ItemGroup>
      <BuildOutputInPackage Include="$(OutputPath)BlazorState.Js.dll" />
    </ItemGroup>
  </Target>
  <!-- End TypeScript project-->
  
  <!--Add Version-->
  <Target Name="WriteVersionToFile">
    <WriteLinesToFile File="$(OutputPath)..\..\Version.txt" Lines="$(PackageVersion)" Overwrite="true" Encoding="UTF-8" />
  </Target>
  <!--End Add Version--> 
  
</Project>